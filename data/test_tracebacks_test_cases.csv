,Unnamed: 0,id_solution,task_id,student_solution,author_comment,author_comment_embedding,id_task,level,description,author_solution,tests,trace,messages_open,messages_close
0,0,0,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print('Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]",None,False,False
1,1,1,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.)",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: unterminated f-string literal (detected at line 6) (<string>, line 6)",None,None
2,2,2,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(fРеализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: unterminated string literal (detected at line 6) (<string>, line 6)",None,None
3,3,3,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {discount} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]",None,False,False
4,4,4,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money * discount} тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]",None,False,False
5,5,5,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(f""Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: unterminated f-string literal (detected at line 6) (<string>, line 6)",None,None
6,6,6,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print('Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]",None,False,False
7,7,7,0,"discount  = float(input())
money = int(input())

#ваш код ниже

    print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: unexpected indent (<string>, line 6)",None,None
8,8,8,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.'",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: '(' was never closed (<string>, line 6)",None,None
9,9,9,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить money тыс. руб. без скидки. Со скидой стоимость составит money- (money * discount) тыс. руб.')",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]",None,False,False
10,10,10,0,"discount  = int(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.'",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: '(' was never closed (<string>, line 6)",None,None
11,11,11,0,"discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * int(discount))} тыс. руб.'",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: '(' was never closed (<string>, line 6)",None,None
12,12,12,0,"discount  = float(input())
money = int(input())

#ваш код ниже

Print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.'",Ваше предсказание,,0,B,"Реализуйте программу, которая напечатает стоимость реализации проекта со скидкой: 

В переменную dicount считывается размер скидки на реализацию проекта (вещественное число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. без скидки. Со скидой стоимость составит <стоимость с учетом скидки> тыс. руб.'. 
Важно! В коде обязательно нужно использовать f-строку!","discount  = float(input())
money = int(input())

#ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. без скидки. Со скидой стоимость составит {money- (money * discount)} тыс. руб.')","[{'number': 0, 'type': 'open', 'input': '0.1; 500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. без скидки. Со скидкой стоимость составит 450.0 тыс. руб.'}, {'number': 1, 'type': 'open', 'input': '0.05; 900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. без скидки. Со скидкой стоимость составит 855000.0 тыс. руб.'}, {'number': 2, 'type': 'open', 'input': '0; 2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. без скидки. Со скидкой стоимость составит 2345678.0 тыс. руб.'}, {'number': 3, 'type': 'closed', 'input': '0.5; 100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. без скидки. Со скидкой стоимость составит 50.0 тыс. руб.'}, {'number': 4, 'type': 'closed', 'input': '0.003; 12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. без скидки. Со скидкой стоимость составит 12308629.999 тыс. руб.'}]","Ошибка при выполнении кода: '(' was never closed (<string>, line 6)",None,None
13,13,60,4,"allowed_colors = input().split(', ')
favorite_colors =input().split(', ')
used_colors = input().split(', ')

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
14,14,61,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

ans = allowed_colors & used_colors & favorite_colors

print(ans, sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
15,15,62,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

ans = allowed_colors & used_colors & favorite_colors

print(*ans, sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
16,16,63,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
17,17,64,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = ';', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
18,18,65,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors - used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
19,19,66,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors - used_colors - favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
20,20,67,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors - favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
21,21,68,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors), reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]","Ошибка при выполнении кода: unmatched ')' (<string>, line 5)",None,None
22,22,69,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
23,23,70,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowedcolors & usedcolors & favoritecolors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
24,24,71,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors and used_colors and favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
25,25,72,4,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors + used_colors + favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,4,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые разрешены для использования в проекте, уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(allowed_colors & used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Умеренный синий, Серый, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Желтый; Пурпурный; Серый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': 'Синий!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Индиго, Красный, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный\nИндиго, Томатно-красный, Желтый, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}]",Ошибка при выполнении кода: ,None,None
26,26,73,5,"room = input()

residences = []
for key, value in studios:
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
27,27,74,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value:
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
28,28,75,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in k:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
29,29,76,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in key.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
30,30,77,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
31,31,78,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.add(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
32,32,79,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(set(residences))",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
33,33,80,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*set(residences), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
34,34,81,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)))",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
35,35,82,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(residences), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
36,36,83,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(room)",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
37,37,84,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(room)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
38,38,85,5,"room = input()

residences = ()
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
39,39,86,5,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
    print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
40,40,87,5,"room = input()

residences = ()
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
        residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]","Ошибка при выполнении кода: expected an indented block after 'if' statement on line 6 (<string>, line 7)",None,None
41,41,88,5,"room = input()

residences = ()
for key, value in studios.items():
    for k, v in value.items():
        if room not in v
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]","Ошибка при выполнении кода: expected ':' (<string>, line 6)",None,None
42,42,89,5,"room = input()

residences = ()
for key, value in studios.items():
    for k, v in value.items():
        if room not in value:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')",Ваше предсказание,,5,B,"Реализуйте программу, которая определит названия поселков, где студии дизайна занимались интерьером определенного помещения:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии не занимались дизайном интерьера введенного помещения  и напечатайте уникальные названия поселков через прямой слэш (""/""). Названия поселков должны идти в алфавитном порядке.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(set(residences)), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Британика/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Британика/Гринфилд/Монтевиль/Сканди-парк/Театральный квартал'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Театральный квартал'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': nan}, {'number': 7, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд/Сканди-парк/Театральный квартал'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Британика/Гринфилд/Монтевиль/Риверсайд'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
43,43,197,12,"duration  = int(input())
money = int(input())

# ваш код ниже

print('Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '9\\n12345667',None,None
44,44,198,12,"duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.)",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]","Ошибка при выполнении кода: unterminated f-string literal (detected at line 6) (<string>, line 6)",None,None
45,45,199,12,"duration  = int(input())
money = int(input())

# ваш код ниже

print(fРеализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]","Ошибка при выполнении кода: unterminated string literal (detected at line 6) (<string>, line 6)",None,None
46,46,200,12,"duration  = int(input())
money = int(input())

# ваш код ниже

print('Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '9\\n12345667',None,None
47,47,201,12,"duration  = int(input())
money = int(input())

# ваш код ниже

    print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]","Ошибка при выполнении кода: unexpected indent (<string>, line 6)",None,None
48,48,202,12,"duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить money тыс. руб. Срок реализации проекта duration недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '9\\n12345667',None,None
49,49,203,12,"duration  = int(input())
money = input()

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '9\\n12345667',None,None
50,50,204,12,"duration  = input()
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: ,None,None
51,51,205,12,"duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {duration} тыс. руб. Срок реализации проекта {money} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '9\\n12345667',None,None
52,52,206,12,"duration  = int(input())
money = int(input())

# ваш код ниже

Print(f'Реализация проекта будет стоить {duration} тыс. руб. Срок реализации проекта {money} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '9\\n12345667',None,None
53,53,207,12,"duration  = int(input())
money = int(input())

# ваш код ниже

Print(f'Реализация проекта будет стоить {time} тыс. руб. Срок реализации проекта {money} недель.')",Ваше предсказание,,12,B,"Реализуйте программу, которая напечатает стоимость и срок реализации проекта: 

В переменную duration считывается срок реализации проекта в неделях(целое число). Этот код уже написан.
В переменную money считывается стоимость реализации проекта в тысячах (целое число). Этот код уже написан.
Программа должна вывести фразу вида 'Реализация проекта будет стоить <стоимость> тыс. руб. Срок реализации проекта - <срок реализации в неделях> недель.'. 
Важно! В коде обязательно нужно использовать f-строку!","duration  = int(input())
money = int(input())

# ваш код ниже

print(f'Реализация проекта будет стоить {money} тыс. руб. Срок реализации проекта {duration} недель.')","[{'number': 0, 'type': 'open', 'input': '10\n500', 'output': 'Реализация проекта будет стоить 500 тыс. руб. Срок реализации проекта 10 недель.'}, {'number': 1, 'type': 'open', 'input': '7\n900000', 'output': 'Реализация проекта будет стоить 900000 тыс. руб. Срок реализации проекта 7 недель.'}, {'number': 2, 'type': 'open', 'input': '110\n2345678', 'output': 'Реализация проекта будет стоить 2345678 тыс. руб. Срок реализации проекта 110 недель.'}, {'number': 3, 'type': 'closed', 'input': '8\n100', 'output': 'Реализация проекта будет стоить 100 тыс. руб. Срок реализации проекта 8 недель.'}, {'number': 4, 'type': 'closed', 'input': '9\n12345667', 'output': 'Реализация проекта будет стоить 12345667 тыс. руб. Срок реализации проекта 9 недель.'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '9\\n12345667',None,None
54,54,208,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = int(input())

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: '#a7f0ca',None,None
55,55,209,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color in logo_project and color in cite_project:
    print(True)
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",None,False,False
56,56,210,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color not in cite_project:
    print(True)
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",None,False,False
57,57,211,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project: 
    print(True)
elif color in cite_project:
    print(True)
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",None,False,False
58,58,212,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(False)
else:
    print(True)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",None,False,False
59,59,213,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project
    print(True)
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]","Ошибка при выполнении кода: expected ':' (<string>, line 6)",None,None
60,60,214,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logoproject and color in citeproject:
    print(True)
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",Ошибка при выполнении кода: name 'logoproject' is not defined,None,None
61,61,215,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]","Ошибка при выполнении кода: expected an indented block after 'else' statement on line 8 (<string>, line 9)",None,None
62,62,216,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]","Ошибка при выполнении кода: '(' was never closed (<string>, line 7)",None,None
63,63,217,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else color in logo_project and color not in cite_project:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]","Ошибка при выполнении кода: expected ':' (<string>, line 8)",None,None
64,64,218,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(true)
else:
    print(false)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",Ошибка при выполнении кода: name 'false' is not defined,None,None
65,65,219,13,"logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project:
    print(True)
else:
    print(False)",Ваше предсказание,,13,B,"Реализуйте программу, которая проверит, что цвет используется только в проекте по созданию дизайна сайта, но не в проекте по созданию логотипа:

Даны два списка logo_project и cite_project с кодами используемых цветов (строки).
В переменную color считывается код цвета (строка). Этот код уже написан.
Программа должна проверять, что код цвета color есть только в списке cite_project, и если да, то печатать True. 
В остальных случаях программа печатает False. ","logo_project = ['#a7a8f0', '#a7f0ca', '#b3b4e4', '#e4b3cd', '#e4e3b3', '#c0ced7']
cite_project = ['#e4e3b3', '#a7a8f0', '#ccb1e6', '#b4f99e', '#f9b59e', '#c0ced7']

color = input()

if color not in logo_project and color in cite_project:
    print(True)
else:
    print(False)","[{'number': 0, 'type': 'open', 'input': '#ccb1e6', 'output': 'True'}, {'number': 1, 'type': 'open', 'input': '#e4e3b3', 'output': 'False'}, {'number': 2, 'type': 'open', 'input': '#e4b3cd', 'output': 'False'}, {'number': 3, 'type': 'closed', 'input': '#b4f99e', 'output': 'True'}, {'number': 4, 'type': 'closed', 'input': '#a7f0ca', 'output': 'False'}]",None,False,False
66,66,235,15,"logo = input()

res = []
for info in logo:
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
67,67,236,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') or info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
68,68,237,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith(@) and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]","Ошибка при выполнении кода: invalid syntax (<string>, line 5)",None,None
69,69,238,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info.isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
70,70,239,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and not(info[1:].isnumeric() == True):      
        res.append(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
71,71,240,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() = True:      
        res.append(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]","Ошибка при выполнении кода: invalid syntax (<string>, line 5)",None,None
72,72,241,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.add(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",Ошибка при выполнении кода: 'list' object has no attribute 'add',None,None
73,73,242,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*info, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
74,74,243,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
    print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
75,75,244,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(logo)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
76,76,245,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(res)",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
77,77,246,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res)",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
78,78,247,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=',')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
79,79,248,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*sorted(res), sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
80,80,249,15,"logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isnumeric() == True or info[1:].isalpha() == True:      
        res.append(info)
        
print(*res, sep=', ')",Ваше предсказание,,15,B,"Реализуйте программу, которая напечатает все упоминания из фраз для лендинга сайта: 

В переменную logo считывается текст лендинга. Этот код уже написан.
Программа проверяет, есть ли в этом тексте упоминания.  Упоминаниями можно считать все элементы, которые начинаются со знака ""@"" и которые содержат в себе только цифры или буквы (не включая знак ""@""). Гарантируется, что упоминания отделены от другого текста пробелом. 
В конце программа печатает все упоминания через запятую с пробелом. Упоминания выводятся в том же порядке, в котором они идут в тексте.
Если упоминаний в тексте нет, то программа ничего не печатает.","logo = input()

res = []
for info in logo.split():
    if info.startswith('@') and info[1:].isalnum() == True:      
        res.append(info)
        
print(*res, sep=', ')","[{'number': 0, 'type': 'open', 'input': '@thebestteacher ответит Вам в течение 10 минут, если Вы напишите в телеграм-канал @ennglish_is_simple', 'output': '@thebestteacher'}, {'number': 1, 'type': 'open', 'input': 'Ваш вопрос из раздел @1questions1 - наш ответ @answer_top! Мы всегда с Вами yf @100 %', 'output': '@1questions1, @100'}, {'number': 2, 'type': 'open', 'input': '@POWERFULL @&&&&& @14568 @Вашего @бизнеса_123', 'output': '@POWERFULL, @14568, @Вашего'}, {'number': 3, 'type': 'closed', 'input': 'Я никогда не был @счастье1 @love @### love@love', 'output': '@счастье1, @love'}, {'number': 4, 'type': 'closed', 'input': '9 из 10 экспертов рекомендуют @ наш @_1223 продукт @__ . abcdedasdfasj@hdadsgfasdbvfvabdkfvnk', 'output': nan}, {'number': 5, 'type': 'closed', 'input': '@ @123 @qswr_1 @qws1 $1@qwd 1@123_qwe 1@123qwe @0 #____  567@23 abcdedj@hdbvfvabdkfvnk', 'output': '@123, @qws1, @0'}]",None,False,False
81,81,250,16,"allowed_colors = input().split(', ')
favorite_colors = input().split(', ')
used_colors = input().split(', ')

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
82,82,251,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(used_colors & favorite_colors - allowed_colors)",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
83,83,252,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*(used_colors & favorite_colors - allowed_colors))",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
84,84,253,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors))",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
85,85,254,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
86,86,255,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
87,87,256,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors - favorite_colors & allowed_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
88,88,257,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors and favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
89,89,258,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors & allowed_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
90,90,259,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors + favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
91,91,260,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(usedcolors & favoritecolors - allowedcolors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
92,92,261,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
93,93,262,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
94,94,263,16,"allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = ' !')",Ваше предсказание,,16,B,"Дизайнер К. хочет подобрать цветовую гамму для нового проекта. Реализуйте программу, которая поможет ему сделать выбор:

В переменную allowed_colors считывается список разрешенных цветов для использования в проекте. Этот код уже написан.
В переменную favorite_colors считывается список любимых цветов дизайнера. Этот код уже написан.
В переменную used_colors считывается список цветов, которые дизайнер уже использовал в предыдущих проектах. Этот код уже написан.
Гарантируется, что цвета в каждом списке уникальны.
Любой список может оказаться пустым.
Программа выводит через точку запятой с пробелом цвета, которые не разрешены для использования в проекте, но при этом уже были использованы дизайнером в предыдущих работах и являются любимыми цветами дизайнера.
Цвета должны быть отсортированы в алфавитном порядке. В конце вывода должен быть напечатан восклицательный знак.
Если таких цветов нет, программа выводит только восклицательный знак. ","allowed_colors = set(input().split(', '))
favorite_colors = set(input().split(', '))
used_colors = set(input().split(', '))

print(*sorted(used_colors & favorite_colors - allowed_colors, reverse = False), sep = '; ', end = '!')","[{'number': 0, 'type': 'open', 'input': 'Алый, Белый, Бордо, Графитно-черный, Гранитный, Медовый, Ниагара, Нефритовый\nПастельно-зеленый, Патиново-зеленый, Оливковый, Сапфировый, Белый\nОгненно-красный, Пастельно-зеленый, Ниагара, Оливковый, Белый, Алый, Медовый, Патиново-зеленый', 'output': 'Оливковый; Пастельно-зеленый; Патиново-зеленый!'}, {'number': 1, 'type': 'open', 'input': 'Алый, Белый, Бордо, Нефритовый, Пастельно-зеленый, Гранитный, Серый хаки, Ниагара\n\nСиний, Гранитный', 'output': '!'}, {'number': 2, 'type': 'closed', 'input': 'Синий\nСиний\nСиний', 'output': '!'}, {'number': 3, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\nИндиго, Фалунский красный, Красный, Алый\nИндиго, Томатно-красный, Красный, Умеренно зеленый, Телегрей, Алый', 'output': 'Индиго; Красный!'}, {'number': 4, 'type': 'closed', 'input': 'Слоновая кость, Серый, Желтый, Спаржа, Телегрей, Темно-розовый, Пурпурный, Алый\n\nЖелтый, Серый, Спаржа, Синий', 'output': '!'}, {'number': 5, 'type': 'closed', 'input': 'Умеренный синий, Желтый, Гранитный Спаржа, Фиалковый, Темно-розовый, Пурпурный, Алый, Фисташковый\nЖелтый, Пурпурный, Черный, Серый, Спаржа, Фисташковый\nСерый, Желтый, Спаржа, Пурпурный, Темно-розовый, Серый, Алый, Фисташковый, Бежевый', 'output': 'Серый; Спаржа!'}]",Ошибка при выполнении кода: ,None,None
95,95,264,17,"room = input()

residences = []
for key, value in studios:
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
96,96,265,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value:
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
97,97,266,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in key.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
98,98,267,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(key)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
99,99,268,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]","Ошибка при выполнении кода: expected ':' (<string>, line 6)",None,None
100,100,269,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room in v:
            residences.append(value)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
101,101,270,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(residences)",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
102,102,271,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*residences)",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
103,103,272,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences))",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
104,104,273,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
105,105,274,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True))",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
106,106,275,17,"room = input()

residences = []
for key, value in studios.items():
    if room  in value[1]:
        residences.append(value[0])
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
107,107,276,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room not in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
108,108,277,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.add(k)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
109,109,278,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residence.append(k)
    
print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
110,110,279,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences), reverse = True,  sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
111,111,280,17,"room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
    print(*sorted(residences, reverse = True), sep='/')",Ваше предсказание,,17,B,"Реализуйте программу, которая определит поселки, где студии дизайна занимались интерьером определенного помещения в домах из разных поселков:

Дан словарь studios, где ключи — это названия студий дизана интерьеров, а значения — словари (где ключи — названия поселков, а значения — списки с названиями помещений, интерьером которых занималась студия в данном поселке). Этот код уже написан.
В переменную room считывается название помещения (строка). Этот код уже написан.
Определите, в каких поселках студии занимались дизайном интерьера введенного помещения  и напечатайте названия поселков через прямой слэш (""/""). Названия поселков должны идти в обратном алфавитном порядке.
Если ни в одном поселке не было дизайна указанного помещения, то программа ничего не печатает.","studios = {
    
    'Rutemple Studio': {'Сканди-парк': ['мастер-спальня', 'столовая', 'гостинная', 'прихожая'], 
                        'Британика': ['прихожая', 'санузел', 'столовая', 'гостинная']},
    'VDT': {'Гринфилд': ['гостинная', 'гардеробная', 'кабинет', 'столовая'], 
            'Британика': [""прихожая"", 'гостинная', 'столовая'], 
            'Театральный квартал': [""прихожая"", ""гостевой санузел"", 'столовая', 'гостинная']},
    'Greenvillage': {'Британика': [""столовая"", ""гостинная""], 
                     'Риверсайд': [""гостинная"", ""столовая"", ""санузел""]},
    'T+T architects': {'Гринфилд': [""гостинная"", ""прихожая"", ""столовая"", 'кабинет'], 
                       'Монтевиль':[""гостинная"", 'столовая']}
}

room = input()

residences = []
for key, value in studios.items():
    for k, v in value.items():
        if room  in v:
            residences.append(k)
    
print(*sorted(residences, reverse = True), sep='/')","[{'number': 0, 'type': 'open', 'input': 'кабинет', 'output': 'Гринфилд/Гринфилд'}, {'number': 1, 'type': 'open', 'input': 'гараж', 'output': nan}, {'number': 2, 'type': 'open', 'input': 'гостинная', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 3, 'type': 'closed', 'input': 'гостевой санузел', 'output': 'Театральный квартал'}, {'number': 4, 'type': 'closed', 'input': 'санузел', 'output': 'Риверсайд/Британика'}, {'number': 5, 'type': 'closed', 'input': 'мастер-спальня', 'output': 'Сканди-парк'}, {'number': 6, 'type': 'closed', 'input': 'столовая', 'output': 'Театральный квартал/Сканди-парк/Риверсайд/Монтевиль/Гринфилд/Гринфилд/Британика/Британика/Британика'}, {'number': 7, 'type': 'closed', 'input': 'холл', 'output': nan}, {'number': 8, 'type': 'closed', 'input': 'гардеробная', 'output': 'Гринфилд'}, {'number': 9, 'type': 'closed', 'input': 'прихожая', 'output': 'Театральный квартал/Сканди-парк/Гринфилд/Британика/Британика'}]",Ошибка при выполнении кода: name 'studios' is not defined,None,None
112,112,298,19,"week = int(input())

with open('projects_file.txt', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.txt',None,None
113,113,299,19,"week = int(input())

open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]","Ошибка при выполнении кода: invalid syntax (<string>, line 3)",None,None
114,114,300,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
115,115,301,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]","Ошибка при выполнении кода: expected ':' (<string>, line 4)",None,None
116,116,302,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
117,117,303,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(', ')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
118,118,304,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
119,119,305,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[1]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
120,120,306,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if info[-1].split()[0] <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
121,121,307,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) < week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
122,122,308,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week or int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
123,123,309,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) < 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
124,124,310,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) == week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
125,125,311,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
126,126,312,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and info[-2].split()[0] <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
127,127,313,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
128,128,314,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(info)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
129,129,315,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week:
            print(info)
        if int(info[-2].split()[0]) <= 250:
            print(info)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
130,130,316,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week:
            print(info)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
131,131,317,19,"week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-2].split()[0]) <= 250:
            print(info)",Ваше предсказание,,19,B,"Ксения анализирует реализованные дизайн-проекты, которые собраны в файле формата csv. Напишите программу, которая выводит все строки, соответствующие реализованным за определенный срок проектам, стоимость которых была не более 250 тыс. руб..

Программа должна открывать структурированный текстовый файл projects_file.csv, в кодировке utf-8, где на каждой строке записана следующая информация о дизайн-проекте: год, стоимость проекта, количество недель, за сколько был реализован проект. Например, строка ""2019,200 тыс. руб.,10 недель"" означает, что в 2019 году проект стоимостью 200 тыс. руб. был реализован за 10 недель.
Гарантируется, что стоимость реализованного проекта всегда записана в формате ""<целое число> тыс. руб."".
Гарантируется, что срок реализации проекта всегда записан в формате ""<целое число> недель"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится строка — количество недель.
Программа должна выводить строки из оригинального файла, которые соответствуют проектам, реализованным не более, чем за указанное количество недель, со стоимостью не более 250 тыс. руб. (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл projects_file.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл projects_file.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","week = int(input())

with open('projects_file.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[-1].split()[0]) <= week and int(info[-2].split()[0]) <= 250:
            print(line)","[{'number': 0, 'type': 'open', 'input': '20', 'output': '2019,178 тыс. руб.,9 недель\n2022,180 тыс. руб.,19 недель\n2020,159 тыс. руб.,7 недель\n2021,127 тыс. руб.,13 недель\n2023,174 тыс. руб.,9 недель\n2021,124 тыс. руб.,9 недель\n2022,155 тыс. руб.,9 недель'}, {'number': 1, 'type': 'closed', 'input': '40', 'output': '2021,222 тыс. руб.,21 недель\n2020,107 тыс. руб.,20 недель\n2021,115 тыс. руб.,40 недель\n2023,150 тыс. руб.,35 недель\n2019,129 тыс. руб.,19 недель\n2021,112 тыс. руб.,37 недель\n2019,147 тыс. руб.,18 недель\n2019,107 тыс. руб.,23 недель\n2022,181 тыс. руб.,20 недель\n2020,112 тыс. руб.,40 недель\n2022,158 тыс. руб.,25 недель\n2020,184 тыс. руб.,15 недель\n2020,184 тыс. руб.,36 недель\n2018,167 тыс. руб.,29 недель\n2020,201 тыс. руб.,29 недель'}, {'number': 2, 'type': 'closed', 'input': '8', 'output': nan}, {'number': 3, 'type': 'closed', 'input': '15', 'output': '2016,219 тыс. руб.,11 недель\n2023,220 тыс. руб.,12 недель\n2017,164 тыс. руб.,15 недель\n2015,180 тыс. руб.,15 недель\n2019,115 тыс. руб.,15 недель'}, {'number': 4, 'type': 'closed', 'input': '43', 'output': '2016,219 тыс. руб.,11 недель\n2020,197 тыс. руб.,19 недель\n2022,195 тыс. руб.,43 недель\n2023,220 тыс. руб.,12 недель\n2019,113 тыс. руб.,41 недель\n2016,195 тыс. руб.,37 недель\n2022,175 тыс. руб.,17 недель\n2017,215 тыс. руб.,22 недель\n2017,164 тыс. руб.,15 недель\n2020,104 тыс. руб.,42 недель\n2020,190 тыс. руб.,36 недель\n2022,135 тыс. руб.,41 недель\n2020,153 тыс. руб.,34 недель\n2015,180 тыс. руб.,15 недель\n2016,153 тыс. руб.,19 недель\n2020,177 тыс. руб.,43 недель\n2018,215 тыс. руб.,40 недель\n2019,115 тыс. руб.,15 недель\n2019,125 тыс. руб.,24 недель\n2018,145 тыс. руб.,41 недель'}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'projects_file.csv',None,None
132,132,318,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join(house1, house2, house3)
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",Ошибка при выполнении кода: str.join() takes exactly one argument (3 given),None,None
133,133,319,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house, house1, house2] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",Ошибка при выполнении кода: name 'house' is not defined,None,None
134,134,320,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split(', ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
135,135,321,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]","Ошибка при выполнении кода: expected ':' (<string>, line 9)",None,None
136,136,322,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for i in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",Ошибка при выполнении кода: name 'item' is not defined,None,None
137,137,323,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[0].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: 'Торшер',None,None
138,138,324,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[1])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: 'руб.',None,None
139,139,325,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
    print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
140,140,326,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split('; ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",Ошибка при выполнении кода: list index out of range,None,None
141,141,327,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",Ошибка при выполнении кода: name 'max_pr' is not defined,None,None
142,142,328,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k >= max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
143,143,329,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k < max_pr:
        max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
144,144,330,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k == max_pr:
        print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
145,145,331,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr == k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
146,146,332,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(k)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
147,147,333,20,"house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3])
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    
if k > max_pr:
    max_pr = k

    
print(max_pr)",Ваше предсказание,,20,C,"Алиса хочет проверить, какое максимальное количество денег потратила студия дизайна на покупку предметов интерьера для трех домов. Напишите программу, которая поможет девушке. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого дома) в формате '<название предмета интерьера>: <цена> руб.'.  Между собой информация о предметах интерьера разделена точкой запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одном предмете интерьера.
ФОРМАТ ВЫВОДА 
Вещественное число — максимальная цена среди всех стоимостей предметов интерьера, которые были куплены студией дизайна. 
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте точку запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную-счетчик для определения максимальной суммы трат.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки вытащите цену (не забудьте преобразовать в целое число), присвойте переменной-счетчику значение новой цены, если эта цена больше, чем предыдущее значение переменной-счетчика.
Напечатайте значение переменной-счетчика.","house1 = input()
house2 = input()
house3 = input()

res = '; '.join([house1, house2, house3] )
max_pr = 0 

res = res.split('; ')
for item in res:
    k = int(item.split(': ')[1].split()[0])
    if k > max_pr:
        max_pr = k

    
print(max_pr)","[{'number': 0, 'type': 'open', 'input': 'Ваза: 3000 руб.; Картина: 28000 руб.; Зеркало: 5000 руб.\nКовер: 90000 руб.; Этажерка: 9000 руб.\nПанно: 150000 руб.; Декоративный цветок: 10000 руб.', 'output': '150000'}, {'number': 1, 'type': 'open', 'input': 'Плед: 3500 руб.\nСтатуэтка: 8000 руб.; Шторы: 5000 руб. \nКартина: 80000 руб.; Плетеное кресло: 50000 руб.', 'output': '80000'}, {'number': 2, 'type': 'closed', 'input': 'Плед: 5000 руб.; Стелаж: 8986863423 руб.; Глобус: 7000 руб.\nТоршер: 8000 руб.\nКовер: 100000 руб.; Скатерть: 5000 руб.; Подсвечник: 8000 руб.', 'output': '8986863423'}, {'number': 3, 'type': 'closed', 'input': 'Торшер: 90000 руб.\nЧеклы на стулья: 90000 руб.\nКартина: 90000 руб.', 'output': '90000.0'}, {'number': 4, 'type': 'closed', 'input': 'Торшер: 90000 руб.; Стул: 253674582375 руб.\nЧеклы на стулья: 90000 руб.; Чехол: 13485023746 руб.\nКартина: 90000 руб.; Ковер: 123456789765 руб.', 'output': '253674582375'}]",None,False,False
148,148,350,22,"def work(slov)
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
149,149,351,22,"def work():
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
150,150,352,22,"def work(slov):
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
151,151,353,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov:
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
152,152,354,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if k[1] == 'не реализован':
            counter += 1
            money_done += k[0]
        if k[1] == 'реализован':
            money_not_done += k[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
153,153,355,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[0] == 'не реализован':
            counter += 1
            money_done += v[1]
        if v[0] == 'реализован':
            money_not_done += v[1]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
154,154,356,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] = 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] = 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
155,155,357,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == не реализован:
            counter += 1
            money_done += v[0]
        if v[1] == реализован:
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
156,156,358,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        else v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
157,157,359,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'не реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
158,158,360,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter == 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
159,159,361,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return False
        
    else:
        return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
160,160,362,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return True",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
161,161,363,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        print([money_done, False])
        
    else:
        print([money_not_done, True])",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
162,162,364,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, false]
        
    else:
        return [money_not_done, true]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
163,163,365,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
164,164,366,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter == 0:
        return [money_not_done, True]     ",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
165,165,367,22,"def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
        if counter != 0:
            return [money_done, False]
        
        else:
            return [money_not_done, True]",Ваше предсказание,,22,C,"Напишите функцию, определяющую возьмут ли дизайнера М. в компанию на работу или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция work, принимающая на вход словарь, ключи в котором — названия проектов дизайнера (строки), а значения — кортежи с двумя элементами (целым числом — стоимость проекта; и строкой ""реализован"" или ""не реализован""). Гарантируется, что словарь содержит информацию минимум об одном проекте.
Если дизайнер не реализовал хотя бы один проект, то функция должна возвращать список из двух значений: целое число — стоимость нереализованных проектов, и логическую константу — False.
Если были реализованы все проекты реализован, то функция возвращает список из двух значений: целое число — стоимость реализованных проектов, и логическую константу — True..
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте три переменные-счетчика — одну для подсчета строк "" не реализован"", другую для подсчета суммы нереализованных проектов, третью для подсчета суммы реализованных проектов.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""не реализован"", то обновите две переменные-счетчика — к первой прибавьте 1, а ко второй прибавьте нулевой по индексу элемент значения (кортежа). Если же первый по индексу элемент значения (кортежа) принимает значение ""реализован"", то обновите третью, прибавив к ней нулевой по индексу элемент значения (кортежа).
Проверьте, что значение первой переменной-счетчика не равно нулю, и если это так, то пусть функция вернет список из двух элементов: значение второй-переменной-счетчика (сумма нереализованных проектов) и логической константы False; иначе пусть функция вернет список из двух элементов: значение третьей переменной-счетчика (сумма нереализованных проектов) и логической константы True.","def work(slov):
    counter = 0
    money_done = 0
    money_not_done = 0
    for k, v in slov.items():
        if v[1] == 'не реализован':
            counter += 1
            money_done += v[0]
        if v[1] == 'реализован':
            money_not_done += v[0]
            
    if counter != 0:
        return [money_done, False]
        
    else:
        return [money_not_done, True]","[{'number': 0, 'type': 'open', 'input': ""{\n    'AltAirResidence': (3000000, 'не реализован'), \n    'Серебряный бор': (20000000, 'не реализован'), \n    'The one and only': (4000000, 'не реализован'), \n    'Айсберг': (5000000, 'не реализован'),\n    'Хайсбот': (10000000, 'не реализован')\n}"", 'output': '[42000000, False]'}, {'number': 1, 'type': 'open', 'input': ""{\n    'Футурист': (1000000, 'реализован')\n}"", 'output': '[1000000, True]'}, {'number': 2, 'type': 'open', 'input': ""{\n    'Проект 1': (12000000, 'реализован'),\n    'АртАктив': (160000, 'не реализован'),\n    'НеоДизайн': (22000000, 'реализован')\n}"", 'output': '[160000, False]'}, {'number': 3, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован'), \n    'Проект 4': (80, 'не реализован'),\n    'Проект 5': (8, 'не реализован')\n}"", 'output': '[217, False]'}, {'number': 4, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (29, 'реализован'), \n    'Проект 3': (10, 'реализован'), \n    'Проект 4': (80, 'реализован'),\n    'Проект 5': (8, 'реализован')\n}"", 'output': '[217, True]'}, {'number': 5, 'type': 'closed', 'input': ""{'1_пр': (90000, 'реализован')}"", 'output': '[90000, True]'}, {'number': 6, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'не реализован'), \n    'Проект 2': (29, 'не реализован'), \n    'Проект 3': (10, 'не реализован') \n}"", 'output': '[129, False]'}, {'number': 7, 'type': 'closed', 'input': ""{\n    'Проект 1': (90, 'реализован'), \n    'Проект 2': (30000, 'не реализован'), \n    'Проект 3': (10, 'реализован') \n}"", 'output': '[30000, False]'}]",None,False,False
166,166,389,24,"ton = input()

# ваш код ниже

print(""Сегодня мы будем анализировать {ton} в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]",None,False,False
167,167,390,24,"ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!)",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]","Ошибка при выполнении кода: unterminated f-string literal (detected at line 5) (<string>, line 5)",None,None
168,168,391,24,"ton = input()

# ваш код ниже

print(fСегодня мы будем анализировать {ton} в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]","Ошибка при выполнении кода: unterminated string literal (detected at line 5) (<string>, line 5)",None,None
169,169,392,24,"ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать метафоры в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]",None,False,False
170,170,393,24,"ton = input()

# ваш код ниже

    print(f""Сегодня мы будем анализировать {ton} в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]","Ошибка при выполнении кода: unexpected indent (<string>, line 5)",None,None
171,171,394,24,"ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать ton в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]",None,False,False
172,172,395,24,"ton = int(input())

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]",Ошибка при выполнении кода: invalid literal for int() with base 10: 'олицентворения',None,None
173,173,396,24,"ton = input()

# ваш код ниже

Print(f""Сегодня мы будем анализировать {ton} в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]",Ошибка при выполнении кода: name 'Print' is not defined,None,None
174,174,397,24,"ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {variant} в тексте!"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]",Ошибка при выполнении кода: name 'variant' is not defined,None,None
175,175,398,24,"ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте"")",Ваше предсказание,,24,B,"Реализуйте программу, которая напечатает анализируемое средство выразительности: 

В переменную ton считывается название средства выразительности. Этот код уже написан.
Программа должна вывести фразу вида 'Сегодня мы будем анализировать '<название средства выразительности>' в тексте!'. 
Важно! В коде обязательно нужно использовать f-строку!","ton = input()

# ваш код ниже

print(f""Сегодня мы будем анализировать {ton} в тексте!"")","[{'number': 0, 'type': 'open', 'input': 'метафоры', 'output': 'Сегодня мы будем анализировать метафоры в тексте!'}, {'number': 1, 'type': 'open', 'input': 'эпитеты', 'output': 'Сегодня мы будем анализировать эпитеты в тексте!'}, {'number': 2, 'type': 'open', 'input': 'анафоры', 'output': 'Сегодня мы будем анализировать анафоры в тексте!'}, {'number': 3, 'type': 'closed', 'input': 'антитезы', 'output': 'Сегодня мы будем анализировать антитезы в тексте!'}, {'number': 4, 'type': 'closed', 'input': 'олицентворения', 'output': 'Сегодня мы будем анализировать олицентворения в тексте!'}]",None,False,False
176,176,399,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] != second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
177,177,400,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if есть in language and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
178,178,401,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.startswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
179,179,402,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]","Ошибка при выполнении кода: expected ':' (<string>, line 7)",None,None
180,180,403,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if languages.endswith('есть') and languages.split('-')[1] == second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
181,181,404,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
print(yes)
else:
print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]","Ошибка при выполнении кода: expected an indented block after 'if' statement on line 7 (<string>, line 8)",None,None
182,182,405,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]","Ошибка при выполнении кода: '(' was never closed (<string>, line 10)",None,None
183,183,406,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else language.split('-')[1] != second_language:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]","Ошибка при выполнении кода: expected ':' (<string>, line 9)",None,None
184,184,407,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('нет') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
185,185,408,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть'):
    print(yes)
eilf language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]","Ошибка при выполнении кода: invalid syntax (<string>, line 9)",None,None
186,186,409,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(no)
else:
    print(yes)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
187,187,410,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть'):
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
188,188,411,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
189,189,412,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]",Ошибка при выполнении кода: ,None,None
190,190,413,25,"language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] = second_language:
    print(yes)
else:
    print(no)",Ваше предсказание,,25,B,"Реализуйте следующую программу:

В переменную language считывается строка вида ""<исходный язык текста>-<язык, на который нужно перевести текст>-<наличие специальных терминов в тексте — есть / нет>"". Этот код уже написан.
В переменную second_language считывается строка, обозначающая язык, на который нужно перевести текст. Этот код уже написан.
Программа должна проверять, что язык, на который нужно перевести текст, совпадает с введенным значением и что в тексте есть специальные термины. Если выполняются оба условия, программа печатает фразу ""Сможем перевести"", она сохранена для вас в переменную yes.
В остальных случаях программа печатает фразу ""Не сможем перевести"". Эта строка сохранена для вас в переменную no.","language = input()
second_language = input()

yes = 'Сможем перевести'
no = 'Не сможем перевести'

if language.endswith('есть') and language.split('-')[1] == second_language:
    print(yes)
else:
    print(no)","[{'number': 0, 'type': 'open', 'input': 'Русский-Английский-есть\nРусский', 'output': 'Не сможем перевести'}, {'number': 1, 'type': 'open', 'input': 'Немецкий-Английский-есть\nАнглийский', 'output': 'Сможем перевести'}, {'number': 2, 'type': 'open', 'input': 'Немецкий-Французкий-есть\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 3, 'type': 'closed', 'input': 'Албансакий-Казахский-есть\nКазахский', 'output': 'Сможем перевести'}, {'number': 4, 'type': 'closed', 'input': 'Албансакий-Французский-есть\nАлбансакий', 'output': 'Не сможем перевести'}, {'number': 5, 'type': 'closed', 'input': 'Немецкий-Казахский-нет\nНемецкий', 'output': 'Не сможем перевести'}, {'number': 6, 'type': 'closed', 'input': 'Русский-Казахский-нет\nКазахский', 'output': 'Не сможем перевести'}]","Ошибка при выполнении кода: invalid syntax (<string>, line 7)",None,None
191,191,483,31,"words = input()

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
192,192,484,31,"words = int(input())

open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]","Ошибка при выполнении кода: invalid syntax (<string>, line 3)",None,None
193,193,485,31,"words = int(input())

with open('info_texts.txt', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.txt',None,None
194,194,486,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
195,195,487,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
196,196,488,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(', ')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
197,197,489,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
        print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
198,198,490,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if info[0] <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
199,199,491,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) < 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
200,200,492,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and info[-1].split()[0] >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
201,201,493,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[1]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
202,202,494,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] = 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]","Ошибка при выполнении кода: invalid syntax (<string>, line 7)",None,None
203,203,495,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] != 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
204,204,496,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == французский:
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
205,205,497,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(info)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
206,206,498,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words or info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
207,207,499,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 or int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
208,208,500,31,"words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 & int(info[-1].split()[0]) >= words & info[1] == 'французский':
            print(line)",Ваше предсказание,,31,B,"Роман анализирует информаицю о переведенных текстах, которая собрана в файле формата csv. Напишите программу, которая выводит все строки, соответствующие текстам, написанным на французском языке, которые были переведены не позднее, чем в 2015 году, а количество слов в которых не менее определенного значения.

Программа должна открывать структурированный текстовый файл info_texts.csv, в кодировке utf-8, где на каждой строке записана следующая информация о переведенном тексте: год, оригинальный язык текста, язык перевода текста, количество слов в тексте. Например, строка ""1993,английский,немецкий,6000 слов"" означает, что в 1993 году текст, написанный на английском языке, был переведен на немецкий, и объем текста составил 6000 слов.
Гарантируется, что объем текста всегда записан ""<целое число> слов"".
Разделителями данных в файле служат запятые.
Гарантируется, что в файле есть как минимум одна строка с данными. 
С клавиатуры вводится число — количество слов. Этот код уже написан.
Программа должна выводить строки из оригинального файла, которые соответствуют переведенным не позднее, чем в 2015 году текстам, оригинальный язык которых — это французский, и объем которых составляет не менее указанного количества слов (не забудьте удалить символы конца строки!).
Если подходящих под условие строк в файле нет, то программа ничего не выводит.
ДОПОЛНИТЕЛЬНО
Ваше решение будет проверяться на закрытых тестах. Ваш код должен считывать файл info_texts.csv без дополнительных указаний (например, пути к файлу на вашем компьютере).
В открытом тесте используется файл info_texts.csv. Вы можете скачать его и проверить свое решение локально.
В примере в первой колонке отображается номер теста (0 — открытый тест), считывать это число или использовать его в вашем решении не нужно.","words = int(input())

with open('info_texts.csv', 'r', encoding='utf-8') as my_file:
    for line in my_file:
        line = line.strip()
        info = line.split(',')
        if int(info[0]) <= 2015 and int(info[-1].split()[0]) >= words and info[1] == 'французский':
            print(line)","[{'number': 0, 'type': 'open', 'input': '75000', 'output': '2004,французский,иврит,78918 слов\n1998,французский,испанский,78587 слов\n2003,французский,польский,97809 слов\n2001,французский,польский,88574 слов\n2003,французский,иврит,78369 слов\n2007,французский,английский,82887 слов\n2010,французский,французский,77846 слов\n2013,французский,французский,98860 слов\n2003,французский,английский,82460 слов\n1990,французский,польский,81502 слов\n1995,французский,немецкий,98307 слов\n2001,французский,польский,86564 слов\n2006,французский,польский,85358 слов\n2015,французский,французский,87587 слов\n2007,французский,английский,79348 слов\n2012,французский,французский,91572 слов\n1995,французский,польский,88269 слов\n1992,французский,польский,95124 слов'}, {'number': 1, 'type': 'closed', 'input': '82100', 'output': '1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n1992,французский,иврит,85040 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n1994,французский,испанский,91533 слов\n1992,французский,французский,82592 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n2013,французский,иврит,95478 слов\n1990,французский,английский,97158 слов'}, {'number': 2, 'type': 'closed', 'input': '30000', 'output': '2004,французский,польский,75062 слов\n2015,французский,польский,70234 слов\n2013,французский,иврит,35262 слов\n1991,французский,испанский,94084 слов\n1996,французский,английский,90983 слов\n2006,французский,китайский,67801 слов\n1992,французский,иврит,85040 слов\n2000,французский,немецкий,44758 слов\n1994,французский,испанский,98170 слов\n2004,французский,немецкий,86760 слов\n2000,французский,немецкий,52241 слов\n1991,французский,английский,34717 слов\n1994,французский,испанский,91533 слов\n2010,французский,немецкий,52852 слов\n1992,французский,французский,82592 слов\n2011,французский,польский,81145 слов\n2009,французский,французский,62668 слов\n2003,французский,французский,52162 слов\n2013,французский,немецкий,58569 слов\n2013,французский,английский,54470 слов\n1995,французский,французский,62293 слов\n2013,французский,иврит,52144 слов\n2003,французский,французский,56943 слов\n2002,французский,иврит,69253 слов\n1997,французский,иврит,96576 слов\n1997,французский,французский,94460 слов\n1992,французский,английский,44716 слов\n1993,французский,английский,62393 слов\n2011,французский,иврит,31751 слов\n1998,французский,польский,39630 слов\n2013,французский,иврит,95478 слов\n1992,французский,французский,42673 слов\n2008,французский,иврит,56832 слов\n1997,французский,польский,30475 слов\n1990,французский,английский,97158 слов\n2003,французский,испанский,61586 слов\n2014,французский,испанский,74615 слов\n1992,французский,испанский,43355 слов\n2009,французский,китайский,31552 слов\n2008,французский,английский,53762 слов\n2013,французский,польский,56267 слов\n1995,французский,польский,53221 слов\n2000,французский,испанский,70624 слов\n2008,французский,испанский,46021 слов\n1996,французский,испанский,58576 слов\n2012,французский,английский,49464 слов\n2001,французский,иврит,69826 слов\n2004,французский,испанский,60713 слов\n1993,французский,испанский,48882 слов\n2006,французский,польский,36910 слов\n1990,французский,немецкий,58405 слов\n2007,французский,немецкий,65323 слов\n2004,французский,немецкий,65629 слов\n2015,французский,иврит,54593 слов\n2009,французский,французский,61733 слов\n1998,французский,французский,60820 слов\n2006,французский,английский,31224 слов\n1993,французский,китайский,49360 слов\n2004,французский,иврит,72230 слов'}, {'number': 3, 'type': 'closed', 'input': '1000000', 'output': nan}]",Ошибка при выполнении кода: [Errno 2] No such file or directory: 'info_texts.csv',None,None
209,209,519,33,"data = input().split()
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
210,210,520,33,"data = input().split('/ ')
skill = input()

result = {}
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
211,211,521,33,"data = input().split('/ ')
skill = input()

for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
212,212,522,33,"data = input()
data.split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
213,213,523,33,"data = input().split('/ ')
skill = input()

result = []
for i in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
214,214,524,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(':')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
215,215,525,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]","Ошибка при выполнении кода: expected ':' (<string>, line 8)",None,None
216,216,526,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp = comp.split(': ')
    
    if skill in comp:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
217,217,527,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.add(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
218,218,528,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill not in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
219,219,529,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(result)",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
220,220,530,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*result)",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
221,221,531,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result)",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]","Ошибка при выполнении кода: '(' was never closed (<string>, line 11)",None,None
222,222,532,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
223,223,533,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True))",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
224,224,534,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=true), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
225,225,535,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

    print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
226,226,536,33,"data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
if skill in skills:
    result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')",Ваше предсказание,,33,C,"Игорь хочет пойти работать по профессии и смотрит, какие навыки необходимы для работы на определенной должности. Напишите программу, которая поможет Игорь определить должности, на которые его могут взять. 

ФОРМАТ ВВОДА
На первой строке через прямой слэш (""/"") и пробел вводится информация о должностях и навыках в формате '<название должностии>: <названия навыков через запятую и пробел>'. Гарантируется, что строка содержит информацию минимум об одной должности. 
На второй строке вводится навык, которым владеет Игорь. 
ФОРМАТ ВЫВОДА
Названия должностей, на которые Игоря могут взять.
Названия должны выводиться через точку с запятой и пробел в обратном алфавитном порядке.
Если таких должностей нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с должностями и навыками, сразу разделите по разделителю и получите список.
Считайте в переменную название навыка.
Создайте пустой список, в который будете добавлять название должности, если на нее могут взять Игоря.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название должности в одну переменную, а названия навыков — в другую переменную;
если навык Игоря (переменная из п.2) есть в списке с требуемыми навыками для должности, то добавьте название должности в список из п.3.
Отсортируйте получившийся список в обратном алфавитном порядке. 
Напечатайте элементы списка через точку с запятой и пробел.","data = input().split('/ ')
skill = input()

result = []
for comp in data:
    comp, skills = comp.split(': ')
    
    if skill in skills:
        result.append(comp)

print(*sorted(result, reverse=True), sep = '; ')","[{'number': 0, 'type': 'open', 'input': 'Организатор международных мероприятий: управление проектами, деловые коммуникации, английский язык/ Бизнес-аналитик: python, статистика/ Аккаунт-менеджер: html, управление проектами/ Менеджер по локализации: Excel, Word, английский язык \nуправление проектами', 'output': 'Организатор международных мероприятий; Аккаунт-менеджер'}, {'number': 1, 'type': 'open', 'input': 'Бизнес-переводчик: английский язык\nанглийский язык', 'output': 'Бизнес-переводчик'}, {'number': 2, 'type': 'open', 'input': 'Бизнес-аналитик: python\nC++', 'output': nan}, {'number': 3, 'type': 'closed', 'input': 'Аналитик: SQL/ Консультант: коммуникации/ Менеджер: многозначность\nSQL', 'output': 'Аналитик'}, {'number': 4, 'type': 'closed', 'input': 'Аналитик: машинное обучение/ Специалист по оптимизации процессов: машинное обучение/ Специалист по машинному переводу: машинное обучение\nмашинное обучение', 'output': 'Специалист по оптимизации процессов; Специалист по машинному переводу; Аналитик'}]",Ошибка при выполнении кода: ,None,None
227,227,577,36,"time = input()

# ваш код ниже

print('В агентстве «Шедеврус» мы делаем дизайн за {time}!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]",None,False,False
228,228,578,36,"time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!)",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]","Ошибка при выполнении кода: unterminated f-string literal (detected at line 5) (<string>, line 5)",None,None
229,229,579,36,"time = input()

# ваш код ниже

print(fВ агентстве «Шедеврус» мы делаем дизайн за {time}!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]","Ошибка при выполнении кода: invalid character '«' (U+00AB) (<string>, line 5)",None,None
230,230,580,36,"time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за неделю!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]",None,False,False
231,231,581,36,"time = input()

# ваш код ниже

    print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]","Ошибка при выполнении кода: unexpected indent (<string>, line 5)",None,None
232,232,582,36,"time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за time!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]",None,False,False
233,233,583,36,"time = input()

# ваш код ниже

Print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]",Ошибка при выполнении кода: name 'Print' is not defined,None,None
234,234,584,36,"time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {duration}!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]",Ошибка при выполнении кода: name 'duration' is not defined,None,None
235,235,585,36,"time = input()

# ваш код ниже

print(f""В агентстве «Шедеврус» мы делаем дизайн за {time}!')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]","Ошибка при выполнении кода: unterminated f-string literal (detected at line 5) (<string>, line 5)",None,None
236,236,586,36,"time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}')",Ваше предсказание,,36,B,"Реализуйте следующую программу: 

В переменную time считывается строка с названием временного промежутка. Этот код уже написан.
Программа должна вывести фразу вида 'В агентстве «Шедеврус» мы делаем дизайн за <время>!'. 
Важно! В коде обязательно нужно использовать f-строку!","time = input()

# ваш код ниже

print(f'В агентстве «Шедеврус» мы делаем дизайн за {time}!')","[{'number': 0, 'type': 'open', 'input': 'неделю', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за неделю!'}, {'number': 1, 'type': 'open', 'input': 'день', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за день!'}, {'number': 2, 'type': 'open', 'input': 'месяц', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за месяц!'}, {'number': 3, 'type': 'closed', 'input': 'вечность', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за вечность!'}, {'number': 4, 'type': 'closed', 'input': 'три дня', 'output': 'В агентстве «Шедеврус» мы делаем дизайн за три дня!'}]",None,False,False
237,237,587,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('лендинг') and time <= 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
238,238,588,37,"order = input()
time = input()

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",Ошибка при выполнении кода: '<=' not supported between instances of 'str' and 'int',None,None
239,239,589,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.endswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
240,240,590,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') & time <= 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
241,241,591,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') or time <= 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
242,242,592,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг'): 
    print(work)
elif time <= 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
243,243,593,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time < 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
244,244,594,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг'):
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
245,245,595,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if time <= 10:
    print(work)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
246,246,596,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
247,247,597,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]","Ошибка при выполнении кода: expected ':' (<string>, line 11)",None,None
248,248,598,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(wok)
else:
    print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
249,249,599,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
print(reject)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]","Ошибка при выполнении кода: expected an indented block after 'else' statement on line 11 (<string>, line 12)",None,None
250,250,600,37,"order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(reject)
else:
    print(work)",Ваше предсказание,,37,B,"Реализуйте следующую программу:

В переменную order считывается строка вида ""<заказ>;<стоимость в рублях>;<компания-заказчик>"". Этот код уже написан.
В переменную time считывается целое число, обозначающее количество дней для выполнения заказа. Этот код уже написан.
Программа должна проверять, что на выполнение заказа отведено не более 10 дней, а также что заказ начинается со слова ""Лендинг"".
Если условия выполняются, программа печатает фразу ""Берем заказ в работу"". Эта фраза сохранена для вас в переменную work.
В остальных случаях программа печатает фразу ""Отказываем заказчику"". Эта строка сохранена для вас в переменную reject.","order = input()
time = int(input())

work = 'Берем заказ в работу'
reject = 'Отказываем заказчику'

# ваш код

if order.startswith('Лендинг') and time <= 10:
    print(work)
else:
    print(reject)","[{'number': 0, 'type': 'open', 'input': 'Лендинг;7800;InfoSerf\n11', 'output': 'Отказываем заказчику'}, {'number': 1, 'type': 'open', 'input': 'Постер;13000;BizHelp\n5', 'output': 'Отказываем заказчику'}, {'number': 2, 'type': 'open', 'input': 'Лендинг и постер;40000;ДанныеМакс\n8', 'output': 'Берем заказ в работу'}, {'number': 3, 'type': 'closed', 'input': 'Концепция;3400000;ИнфоОптима\n2', 'output': 'Отказываем заказчику'}, {'number': 4, 'type': 'closed', 'input': 'Лендинг;3550000;ByteHub\n25', 'output': 'Отказываем заказчику'}]",None,False,False
251,251,641,41,"font = input()

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
252,252,642,41,"font = input()
used = []

for k,v in design:
    if font in v:
        used.append(k)
        
print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
253,253,643,41,"font = input()
used = []

for key,value in design.items():
    if font in v:
        used.append(k)
        
print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
254,254,644,41,"font = input()
used = []

for k,v in design.items():
    if font in k:
        used.append(v)
        
print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
255,255,645,41,"font = input()
used = []

for k,v in design.items():
    if font not in v:
        used.append(k)
        
print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
256,256,646,41,"font = input()
used = []

for k,v in design.items():
    if font in v:
        used.add(k)
        
print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
257,257,647,41,"font = input()
used = []

for k,v in design.items():
    if font in v
        used.append(k)
        
print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]","Ошибка при выполнении кода: expected ':' (<string>, line 5)",None,None
258,258,648,41,"font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(sorted(used))",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
259,259,649,41,"font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(*used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
260,260,650,41,"font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
    print(used)",Ваше предсказание,,41,B,"Реализуйте следующую программу:

Дан словарь design, где ключи — это имена и фамилии дизайнеров, а значения — списки со шрифтами, которые они используют в своих работах. Этот код уже написан.
В переменную font считывается название шрифта. 
Определите, какие дизайнеры используют этот шрифт и напечатайте список этих дизайнеров. Имена и фамилии дизайнеров должны идти в том же порядке, как они встречаются в словаре. 
Если таких дизайнеров нет, должен печататься пустой список.","design = {
    'Екатерина Васильева': ['Baskerville Old Face', 'Lucida Bright', 'Monotype Corsiva', 'Courier New'],
    'Анастасия Соколова': ['Old English Text MT', 'Zapf Dingbats', 'Brush Script Std'],
    'Ольга Кузнецова': ['Lucida Sans Unicode', 'Tahoma', 'Courier New', 'Palatino Linotype'],
    'Дмитрий Михайлов': ['Arial Black', 'Garamond', 'Lucida Console', 'Courier New', 'Tahoma'],
    'Мария Петрова': ['Arial', 'Calibri', 'Monotype Corsiva']
}

font = input()
used = []

for k,v in design.items():
    if font in v:
        used.append(k)
        
print(used)","[{'number': 0, 'type': 'open', 'input': 'Courier New', 'output': ""['Екатерина Васильева', 'Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 1, 'type': 'open', 'input': 'Tahoma', 'output': ""['Ольга Кузнецова', 'Дмитрий Михайлов']""}, {'number': 2, 'type': 'open', 'input': 'Comic Sans MS', 'output': '[]'}, {'number': 3, 'type': 'closed', 'input': 'Arial Black', 'output': ""['Дмитрий Михайлов']""}, {'number': 4, 'type': 'closed', 'input': 'Monotype', 'output': '[]'}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
261,261,651,42,"def best_agencies(names, count)
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
262,262,652,42,"def best_agencies():
    names = input().split(', ')
    count = list(map(int, input().split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
263,263,653,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(name)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
264,264,654,42,"def best_agencies(names, count):
    names = names.split(',')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
265,265,655,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
266,266,656,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
267,267,657,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    print(sorted(agency))",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
268,268,658,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
        
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
269,269,659,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(names):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
270,270,660,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in len(names):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
271,271,661,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] > 500:
            agency.append(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
272,272,662,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.add(names[idx])
    
    return sorted(agency)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
273,273,663,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return agency",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
274,274,664,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency, reverse = True)",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
275,275,665,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:    
            return sorted(names[idx])",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
276,276,666,42,"def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    print(sorted(agency))",Ваше предсказание,,42,B,"Напишите функцию, определяющую агентства с допустимым количеством положительных отзывов.

Определите функцию best_agencies, которая принимает на вход две строки:
в первой строке через запятую и пробел перечислены названия агентств;
во второй строке через запятую и пробел перечислено количество положительных отзывов (целые числа) у каждого агентства.
Гарантируется, что названия агентств не повторяются.
Функция должна находить агентства, у которых не менее 500 положительных отзывов, и возвращать список с названиями таких агентств в алфавитном порядке. 
Гарантируется, что в данных есть как минимум одно агентство, удовлетворяющее этому условию. 
Важно! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.","def best_agencies(names, count):
    names = names.split(', ')
    count = list(map(int, count.split(', ')))
    
    agency = []
    
    for idx in range(len(names)):
        if count[idx] >= 500:
            agency.append(names[idx])
    
    return sorted(agency)","[{'number': 0, 'type': 'open', 'input': ""'Эстетус, Креатус, Авангардус, Эксклюзивус, Виртуус', '320, 580, 537, 432, 599'"", 'output': ""['Авангардус', 'Виртуус', 'Креатус']""}, {'number': 1, 'type': 'open', 'input': ""'Инноватус, Прогрессус, Эволютус', '1424, 72, 124'"", 'output': ""['Инноватус']""}, {'number': 2, 'type': 'closed', 'input': ""'Bot1, Bot2, Bot3, Bot4, Bot5, Bot6, Bot7', '124124, 32859, 452335, 8924, 53532, 45453, 8902471'"", 'output': ""['Bot1', 'Bot2', 'Bot3', 'Bot4', 'Bot5', 'Bot6', 'Bot7']""}]",Ошибка при выполнении кода: name 'design' is not defined,None,None
277,277,682,44,"e1 = input()
e2 = input()
e3 = input()

res = '{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
278,278,683,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]","Ошибка при выполнении кода: unterminated string literal (detected at line 5) (<string>, line 5)",None,None
279,279,684,44,"e1 = input()
e2 = input()
e3 = input()

res = f'e1, e2, e3'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
280,280,685,44,"e = input()
e1 = input()
e2 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
281,281,686,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(',')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
282,282,687,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
283,283,688,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
284,284,689,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for i in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
285,285,690,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(':')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
286,286,691,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = exh.split(': ')[1]
    cnt.append(review)
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
287,287,692,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.add(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
288,288,693,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[0])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
289,289,694,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(cnt)",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
290,290,695,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt))",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
291,291,696,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt)[:2])",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
292,292,697,44,"e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True))",Ваше предсказание,,44,C,"Анна хочет узнать топ-2 выставки по количеству отзывов среди всех ее выставок в трех музеях. Напишите программу, которая поможет автору. 

ФОРМАТ ВВОДА 
Вводятся три строки (для каждого музея) в формате '<название выставки>: <количество отзывов>'. Между собой информация о выставках разделена запятой с пробелом. 
Гарантируется, что каждая строка состоит из информации минимум об одной выставке.
ФОРМАТ ВЫВОДА 
Список из двух целых чисел — количество отзывов у двух самых популярных выставок. Числа должны идти от наибольшего к наименьшему.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте строки в три разных переменных. Затем объедините эти строки в одну, в качестве разделителя используйте запятую и пробел. Сохраните результат в новую переменную.
Создайте переменную для сохранения количества отзывов для каждой выставки.
Разбейте созданную в п.1 переменную по разделителю и обратитесь к каждому элементу полученного списка — из каждой строки возьмите количество отзывов (не забудьте преобразовать в целое число) и добавьте их к списку из п. 2.
Отсортируйте список от наибольшего к наименьшему и напечатайте срез из первых двух элементов.","e1 = input()
e2 = input()
e3 = input()

res = f'{e1}, {e2}, {e3}'.split(', ')
cnt = []

for exh in res:
    review = int(exh.split(': ')[1])
    cnt.append(int(review))
    
print(sorted(cnt, reverse=True)[:2])","[{'number': 0, 'type': 'open', 'input': 'мои печали: 23, пять комнат: 450, ангел летящий: 321\nикар: 92, свет твоих окон: 45\nбуря: 134, отражение: 21, л-ю-б-о-в-ь: 1346', 'output': '[1346, 450]'}, {'number': 1, 'type': 'open', 'input': 'Размышления в тишине: 4, Контрасты: 32, Отражения души: 6\nСинтез: 8, Игра на грани: 10\nВзгляд: 10, Дверь позади тебя: 43, Форма: 452, Восприятие парадокса: 1', 'output': '[452, 43]'}, {'number': 2, 'type': 'closed', 'input': 'абстракции: 236, симфония: 3262\nдуша души: 1345, туда: 3252\nкак так: 3673, а где же мы: 1362', 'output': '[3673, 3262]'}, {'number': 3, 'type': 'closed', 'input': 'Раз: 1\nДва: 2\nТри: 0', 'output': '[2, 1]'}]",Ошибка при выполнении кода: ,None,None
293,293,698,45,"data = input()
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
294,294,699,45,"data = input().split('; ')
month = input()

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
295,295,700,45,"data = input().split(';')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
296,296,701,45,"data = input().split('; ')
month = input()

result = []

for i in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
297,297,702,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
298,298,703,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(':')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
299,299,704,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    info = info.split(': ')
    
    if month in info:
        result.append(info)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
300,300,705,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
301,301,706,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(avail)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
302,302,707,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.add(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
303,303,708,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month not in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
304,304,709,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(result)",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
305,305,710,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result))",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
306,306,711,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result, reverse = True), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
307,307,712,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

    print(*sorted(result), sep = ', ')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
308,308,713,45,"data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ',')",Ваше предсказание,,45,C,"Алина планирует свою выставку и смотрит, в какие месяцы музеи готовы предложить ей помещение. Напишите программу, которая поможет Алине найти музей для выставки.

ФОРМАТ ВВОДА
На первой строке через точку с запятой и пробел вводится информация о музеях и месяцах, в которые они могут провести выставку в формате '<название музея>: <месяцы через точку с запятой и пробел>'. Гарантируется, что строка содержит информацию минимум об одном музее. 
На второй строке вводится месяц, в который Алина хочет провести выставку.
ФОРМАТ ВЫВОДА
Названия музеев, которые устраивают Алину (где она может провести выставку).
Названия должны выводиться через запятую и пробел в алфавитном порядке.
Если таких музеев нет, программа ничего не выводит.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Считайте в переменную строку с названиями музеев и месяцами, сразу разделите по разделителю и получите список.
Считайте в переменную название месяца.
Создайте пустой список, в который будете добавлять название музея, если Алина сможет провести там выставку в выбранный ей месяц.
Обратитесь к каждому элементу из списка, созданного в п.1:
разбейте его (строку) по разделителю и сохраните название музея в одну переменную, а месяцы — в другую переменную;
если месяц Алины (переменная из п.2) есть в месяцах музея, то добавьте название музея в список из п.3.
Отсортируйте получившийся список в алфавитном порядке. 
Напечатайте элементы списка через запятую и пробел.","data = input().split('; ')
month = input()

result = []

for info in data:
    museum, avail = info.split(': ')
    
    if month in avail:
        result.append(museum)

print(*sorted(result), sep = ', ')","[{'number': 0, 'type': 'open', 'input': 'Новая Третьяковка: август, октябрь, декабрь; Эрмитаж: январь, март, май; Пушкинский музей: февраль, апрель, июнь, август; Музей изобразительных искусств: январь, март, май, август\nавгуст', 'output': 'Музей изобразительных искусств, Новая Третьяковка, Пушкинский музей'}, {'number': 1, 'type': 'open', 'input': 'Московский музей современного искусства: январь, апрель, май, июнь; Государственный центр современного искусства: февраль, май; МАРС: июнь, июль, август\nянварь', 'output': 'Московский музей современного искусства'}, {'number': 2, 'type': 'closed', 'input': 'Русский музей: октябрь, ноябрь; Музей декоративно-прикладного искусства: январь, февраль, март; Московский музей современного искусства: декабрь, январь\nапрель', 'output': nan}]",Ошибка при выполнении кода: ,None,None
309,309,714,46,"def success(data)
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
310,310,715,46,"def success():
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
311,311,716,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in info.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
312,312,717,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data:
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
313,313,718,46,"def success(data):
    
    wins = 0
    money = 0
    
    for key, value in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
314,314,719,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] = 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
315,315,720,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if k[1] == 'победа':
            wins += 1
        money += k[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
316,316,721,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[2] == 'победа':
            wins += 1
        money += v[1]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
317,317,722,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins =+ 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
318,318,723,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
319,319,724,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) != wins:
        return True
        
    return money",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
320,320,725,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return money
        
    return True",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
321,321,726,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return [True, money]
        
    return False",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
322,322,727,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return [False, money]",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
323,323,728,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return wins",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
324,324,729,46,"def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        print(True)
        
    print(money)",Ваше предсказание,,46,C,"Напишите функцию, определяющую успешна студия дизайна или нет. 

ТРЕБУЕМАЯ ФУНКЦИЯ 
Функция success, принимающая на вход словарь, ключи в котором — отчетные года (целые числа), а значения — кортежи с двумя элементами (целым числом — чистая прибыль за год; и строкой о выигрыше высшей премии дизайна — ""победа"" или ""проигрыш""). Гарантируется, что словарь содержит информацию минимум об одном отчетном годе.
Если студия дизайна во все годы выигрывала премию, то функция должна возвращать логическую константу True.
Если хотя бы в один год студия не выиграла премию, то функция возвращает сумму чистой прибыли за все отчетные годы.
ВАЖНО! В этой задаче вы только определяете функцию, вызывать ее и считывать значения не нужно, это произойдет автоматически при проверке.
АЛГОРИТМ РЕШЕНИЯ 
Это один из возможных алгоритмов решения задачи. Вы можете воспользоваться им в качестве подсказки или решить задачу любым другим удобным для вас способом.
Определите функцию и аргумент, с которым она работает.
Задайте две переменные-счетчика — одну для подсчета строк ""победа"", другую для подсчета суммы чистой прибыли.
Обратитесь к парам ключ-значение в переданном функции словаре. Если первый по индексу элемент значения (кортежа) принимает значение ""победа"", то обновите переменную-счетчик побед (прибавьте 1).
Вне зависимости от победы или проигрыша обновите вторую переменную-счетчик (прибавьте нулевой по индексу элемент значения (кортежа)).
Проверьте, что количество ключей словаря совпадает со значением первой переменной-счетчика, и если да, то пусть функция вернет логическую константу True; иначе пусть функция вернет значение второй-переменной счетчика (сумма чистой прибыли).","def success(data):
    
    wins = 0
    money = 0
    
    for k, v in data.items():
        if v[1] == 'победа':
            wins += 1
        money += v[0]
            
    if len(data) == wins:
        return True
        
    return money","[{'number': 0, 'type': 'open', 'input': ""{\n    2019: (45672, 'победа'), \n    2020: (78988, 'победа'), \n    2021: (2340, 'проигрыш'), \n    2022: (32353, 'победа'),\n    2023: (159200, 'победа')\n}"", 'output': '318553'}, {'number': 1, 'type': 'open', 'input': ""{\n    2021: (16270, 'победа'), \n    2022: (333550, 'победа'),\n    2023: (890185, 'победа')\n}"", 'output': 'True'}, {'number': 2, 'type': 'closed', 'input': ""{ \n    2022: (100, 'проигрыш'),\n    2024: (26, 'проигрыш')\n}"", 'output': '126'}]",Ошибка при выполнении кода: ,None,None
